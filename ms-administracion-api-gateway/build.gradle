plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'gob.mdmq.coretributario'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.1")
	set('springBootAdminVersion', "3.2.1")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	
	// para server-config se lo agrega a cada microservicio cliente
  	implementation 'org.springframework.cloud:spring-cloud-starter-config'
  
	// eureka cliente
   	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    
    //dashboard
    
    implementation 'de.codecentric:spring-boot-admin-starter-client'
    
    //HEALT CHECK para funcionar en postman
	   
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
      implementation 'io.micrometer:micrometer-tracing-bridge-brave'
      implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
      runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
      
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		 mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
