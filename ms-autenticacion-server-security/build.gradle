plugins {
	id 'java'
		id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.irojas'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
 // para server-config se lo agrega a cada microservicio cliente
  	set('springCloudVersion', "2023.0.0")
 	set('springBootAdminVersion', "3.2.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	
	 // para server-config se lo agrega a cada microservicio cliente
  implementation 'org.springframework.cloud:spring-cloud-starter-config'
  
  // eureka cliente
   implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
  
  //dashboard
    implementation 'de.codecentric:spring-boot-admin-starter-client'
    
       //HEALT CHECK para funcionar en postman
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	
	/*JWT*/
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    
    
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
  imports {
   // para server-config se lo agrega a cada microservicio cliente
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
  }
}

tasks.named('test') {
	useJUnitPlatform()
}
